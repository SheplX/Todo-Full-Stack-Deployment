apiVersion: v1
data:
  nginx.conf: |-
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log debug;

    events {}
    http {
      server {
        listen 80;
        location / {
          # Route frontend stuff
          error_page 404 /;
          proxy_intercept_errors on;
          proxy_set_header Host              $host;
          proxy_set_header X-Real-IP         $remote_addr;
          proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-Host  $host;
          proxy_set_header X-Forwarded-Port  $server_port;
          proxy_pass http://frontend:80/;
        }
        location ~ ^/(api) {
          # Route api requests to api server
          proxy_set_header Host              $host;
          proxy_set_header X-Real-IP         $remote_addr;
          proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-Host  $host;
          proxy_set_header X-Forwarded-Port  $server_port;
          include uwsgi_params;
          proxy_pass http://backend:8000;
        }
      }
    }
kind: ConfigMap
metadata:
  name: nginx.conf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  proxy
  labels:
    app:  proxy
spec:
  selector:
    matchLabels:
      app: proxy
  replicas: 1
  template:
    metadata:
      labels:
        app:  proxy
    spec:
      containers:
      - name:  proxy
        image:  nginx:stable-alpine
        imagePullPolicy: IfNotPresent
        env:
        - name: NGINX_ENVSUBST_TEMPLATE_SUFFIX
          value: ".conf"
        - name: NGINX_ENVSUBST_OUTPUT_DIR
          value: "/etc/nginx"
        ports:
        - containerPort:  80
          name:  proxy
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/templates/
      volumes:
        - name: config
          configMap:
            name: nginx.conf
            items:
            - key: nginx.conf
              path: nginx.conf.conf
---
apiVersion: v1
kind: Service
metadata:
  name: proxy
spec:
  selector:
    app: proxy
  type: ClusterIP
  ports:
  - name: proxy
    protocol: TCP
    port: 80
    targetPort: 80